# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - pipelines/*

variables: 
  solution: '*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  TerraformBackend.ResourceGroup: rg-conduit-on-web-staging-001
  TerraformBackend.StorageAccount: strconduitonwebtfrm01
  TerraformBackend.ContainerName: staging
  AzureServiceConnection: nebbia-partner-service-connection

pool:
  vmImage: 'windows-latest'

stages:
- stage: build
  displayName: Build
  jobs: 
  - job: job_build
    displayName: 'Build Backend'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: backend
- stage: deploy
  displayName: Staging
  jobs: 
  - job: job_staging
    displayName: 'Staging'
    steps:
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(AzureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az group create --location eastus --name $(TerraformBackend.ResourceGroup)
            
            az storage account create --name $(TerraformBackend.StorageAccount) --resource-group $(TerraformBackend.ResourceGroup) --location eastus --sku Standard_LRS
            
            az storage container create --name staging --account-name $(TerraformBackend.StorageAccount)

            STORAGE_ACCOUNT_KEY=$(az storage account keys list -g $(TerraformBackend.ResourceGroup) -n $(TerraformBackend.StorageAccount) | jq ".[0].value" -r)

            echo "setting storage account key variable"
            echo "##vso[task.setvariable variable=ARM_ACCESS_KEY;issecret=true]$STORAGE_ACCOUNT_KEY"